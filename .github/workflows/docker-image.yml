name: "Build Docker Image"

on:
  workflow_dispatch:
    inputs:
      php:
        description: "PHP Version"
        required: true
      zts:
        description: "ZTS (Zend Thread Safety)"
        required: true
      ubuntu_version:
        type: string
        description: 'Ubuntu Version'
        required: false
        default: '24.04'
  workflow_call:
    inputs:
      php:
        type: string
        description: "PHP Version"
        required: true
      debug:
        type: string
        description: "PHP Debug -> Options [yes, no]"
        required: false
      zts:
        type: string
        description: "ZTS (Zend Thread Safety) -> Options [yes, no]"
        required: true
      ubuntu_version:
        type: string
        description: "Ubuntu Version -> Options [20.04, 22.04, 24.04]"
        required: false
        default: "24.04"
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Extract PHP Version and ZTS
        id: version
        run: |
          export PHP_VERSION="$(echo ${{ inputs.php }} | grep -oP '^\d+\.\d+')"
          PHP_ENDING="php-$PHP_VERSION"

          [[ ${{ inputs.zts }} == "yes" ]] && PHP_ENDING="$PHP_ENDING-zts"
          [[ ${{ inputs.debug }} == "yes" ]] && PHP_ENDING="$PHP_ENDING-debug"

          echo "php_ending=$PHP_ENDING" >> $GITHUB_ENV

      - name: Build and push API
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          file: ./docker/Dockerfile
          context: .
          push: true
          pull: true
          platforms: linux/amd64
          target: final
          tags: malusevd99/scylladb-php-driver:ubuntu-${{ inputs.ubuntu_version }}-${{ steps.version.outputs.php_ending }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            UBUNTU_VERSION=${{ inputs.ubuntu_version }}
            PHP_VERSION=${{ inputs.php }}
            PHP_ZTS=${{ inputs.zts }}
            PHP_DEBUG=${{ inputs.debug }}
            PHP_MEM_SANITIZERS=${{ inputs.debug }}
